{
  "contractName": "HelloWorld",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "sayHello",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"sayHello\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC20.sol\":\"HelloWorld\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0xc32c0a36dfefd97a230a9069d30a8c7a8b197a7956df4626a6395e96cea4031f\",\"urls\":[\"bzzr://6dc86d22183e5215d088ea7f3ef6f9e9586f7d6c656177f21bcd620f00c278bf\"]},\"zeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061013f806100206000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063ef5fb05b14610046575b600080fd5b34801561005257600080fd5b5061005b6100d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009b578082015181840152602081019050610080565b50505050905090810190601f1680156100c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606040805190810160405280600b81526020017f48656c6c6f20576f726c640000000000000000000000000000000000000000008152509050905600a165627a7a723058201a94dfa33893d638bb5a214d752b198121a108f3eeb6d06d9f2e52c93f10872c0029",
  "deployedBytecode": "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063ef5fb05b14610046575b600080fd5b34801561005257600080fd5b5061005b6100d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009b578082015181840152602081019050610080565b50505050905090810190601f1680156100c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606040805190810160405280600b81526020017f48656c6c6f20576f726c640000000000000000000000000000000000000000008152509050905600a165627a7a723058201a94dfa33893d638bb5a214d752b198121a108f3eeb6d06d9f2e52c93f10872c0029",
  "sourceMap": "1142:111:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1142:111:0;;;;;;;",
  "deployedSourceMap": "1142:111:0:-;;;;;;;;;;;;;;;;;;;;;;;;1168:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1168:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1168:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:6;1222:22;;;;;;;;;;;;;;;;;;;;1168:83;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\";\n\n// ----------------------------------------------------------------------------\n// ERC20 Token, with the addition of symbol, name and decimals and a\n// fixed supply\n// ----------------------------------------------------------------------------\n// contract BasicERC20Token is StandardToken {\n//     using SafeMath for uint256;\n\n//     string public symbol;\n//     string public name;\n//     uint8 public decimals;\n//     uint256 _totalSupply;\n\n//     mapping(address => uint256) balances;\n//     mapping(address => mapping(address => uint256)) allowed;\n\n//     // ------------------------------------------------------------------------\n//     // Constructor\n//     // ------------------------------------------------------------------------\n//     constructor() public {\n//         symbol = \"CC\";\n//         name = \"Example CC Token\";\n//         decimals = 18;\n//         _totalSupply = 1000000 * 10**uint256(decimals);\n//         balances[msg.sender] = _totalSupply;\n//         emit Transfer(address(0), msg.sender, _totalSupply);\n//     }\n// }\n\ncontract HelloWorld {\n    function sayHello() public returns (string) {\n        return (\"Hello World\");\n    }\n}",
  "sourcePath": "/Users/leo/Desktop/Issue-ERC20-token/contracts/ERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC20.sol",
    "exportedSymbols": {
      "HelloWorld": [
        12
      ]
    },
    "id": 13,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "file": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 13,
        "sourceUnit": 525,
        "src": "25:67:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12,
        "linearizedBaseContracts": [
          12
        ],
        "name": "HelloWorld",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10,
              "nodeType": "Block",
              "src": "1212:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "48656c6c6f20576f726c64",
                        "id": 7,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1230:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                          "typeString": "literal_string \"Hello World\""
                        },
                        "value": "Hello World"
                      }
                    ],
                    "id": 8,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1229:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                      "typeString": "literal_string \"Hello World\""
                    }
                  },
                  "functionReturnParameters": 6,
                  "id": 9,
                  "nodeType": "Return",
                  "src": "1222:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 11,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "sayHello",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "1204:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:8:0"
            },
            "scope": 12,
            "src": "1168:83:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13,
        "src": "1142:111:0"
      }
    ],
    "src": "0:1253:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/ERC20.sol",
      "exportedSymbols": {
        "HelloWorld": [
          12
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".24"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "attributes": {
          "SourceUnit": 525,
          "absolutePath": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
          "file": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
          "scope": 13,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "25:67:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            12
          ],
          "name": "HelloWorld",
          "scope": 13
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "sayHello",
              "payable": false,
              "scope": 12,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3,
                "name": "ParameterList",
                "src": "1185:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 11,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 4,
                        "name": "ElementaryTypeName",
                        "src": "1204:6:0"
                      }
                    ],
                    "id": 5,
                    "name": "VariableDeclaration",
                    "src": "1204:6:0"
                  }
                ],
                "id": 6,
                "name": "ParameterList",
                "src": "1203:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "literal_string \"Hello World\""
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "48656c6c6f20576f726c64",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Hello World\"",
                              "value": "Hello World"
                            },
                            "id": 7,
                            "name": "Literal",
                            "src": "1230:13:0"
                          }
                        ],
                        "id": 8,
                        "name": "TupleExpression",
                        "src": "1229:15:0"
                      }
                    ],
                    "id": 9,
                    "name": "Return",
                    "src": "1222:22:0"
                  }
                ],
                "id": 10,
                "name": "Block",
                "src": "1212:39:0"
              }
            ],
            "id": 11,
            "name": "FunctionDefinition",
            "src": "1168:83:0"
          }
        ],
        "id": 12,
        "name": "ContractDefinition",
        "src": "1142:111:0"
      }
    ],
    "id": 13,
    "name": "SourceUnit",
    "src": "0:1253:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x6f939B640EA74A515Af3F5485205CD2851D8ec78",
      "transactionHash": "0x4dc548b46775564b288c18156e88ab1d5dbb36eda60d7461f4b4453d7cf1306a"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-03T12:22:13.724Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}